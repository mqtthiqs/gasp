(* Partial application test *)

(X : Type).
(R : Type -> Type -> Type).

(* A is the construction of R X X in two steps *)
(P = R X).
(A = P X).

(* B is the same object but constructed at once *)
(B = R X X).

(* Do they have the same place in the context?
 * The astonishing answer is: Yes they do!
 * This is because of a propery of the hash function:
 * forall a l, hash(a,l) = hash (hash a, hash l)
 * This is true for all constructors, not only the pair
 *)

(a : A).
(b : B).

(* Let f be a function on B. It accepts also type C as argument *)
(f : A -> Type).

(x = f a).
(y = f b).

Type
