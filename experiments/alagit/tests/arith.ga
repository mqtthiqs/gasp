(prop         : Type).
(nat          : Type).
(0            : nat).
(S            : nat -> nat).
(and or imply : prop -> prop -> prop).
(add sub      : nat -> nat -> nat).
(eq neq le    : nat -> nat -> prop).

(1 = S 0).
(2 = S 1).
(3 = S 2).
(4 = S 3).
(t = add 2 2).
(p = eq t 4).

(mark : nat -> Type).

(P : (t u : nat) . (p = eq t u) . (q = le t u) . mark 1).

mark 2
